{"ast":null,"code":"var _jsxFileName = \"/Users/jukezispilled/VCC/src/pages/LoginPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm(_ref) {\n  _s();\n  let {\n    setAuthToken\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogout = () => {\n    // Clear the authentication token and remove it from local storage\n    setAuthToken('');\n    localStorage.removeItem('authToken');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send login request to the server\n      const response = await axios.post('http://localhost:3001/users/login', {\n        email,\n        password\n      });\n\n      // Extract the token from the response\n      const {\n        token\n      } = response.data;\n\n      // Set the token as the authentication token\n      setAuthToken(token);\n\n      // Save the token to local storage\n      localStorage.setItem('authToken', token);\n    } catch (error) {\n      setError('Invalid email or password');\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen grid content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"border p-2 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"border p-2 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginForm;\nfunction AdminDashboard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Admin Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}\n_c2 = AdminDashboard;\nfunction GeneralUserDashboard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen\",\n    children: [\"General User Dashboard\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n_c3 = GeneralUserDashboard;\nfunction LoginPage() {\n  _s2();\n  const [authToken, setAuthToken] = useState('');\n  useEffect(() => {\n    // Check if the token exists in local storage\n    const storedToken = localStorage.getItem('authToken');\n    if (storedToken) {\n      setAuthToken(storedToken);\n    }\n  }, []);\n  let dashboardComponent;\n  if (authToken) {\n    const decodedToken = jwt_decode(authToken);\n    const userRole = decodedToken ? decodedToken.role : '';\n    if (userRole === 'admin') {\n      dashboardComponent = /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 28\n      }, this);\n    } else if (userRole === 'general') {\n      dashboardComponent = /*#__PURE__*/_jsxDEV(GeneralUserDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 28\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !authToken ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      setAuthToken: setAuthToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: dashboardComponent\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s2(LoginPage, \"HzW9TxNAUAELzgxQrE6AODGD+YE=\");\n_c4 = LoginPage;\nexport default LoginPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"AdminDashboard\");\n$RefreshReg$(_c3, \"GeneralUserDashboard\");\n$RefreshReg$(_c4, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwt_decode","LoginForm","setAuthToken","email","setEmail","password","setPassword","error","setError","handleLogout","localStorage","removeItem","handleSubmit","e","preventDefault","response","post","token","data","setItem","console","log","target","value","AdminDashboard","GeneralUserDashboard","LoginPage","authToken","storedToken","getItem","dashboardComponent","decodedToken","userRole","role"],"sources":["/Users/jukezispilled/VCC/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nfunction LoginForm({ setAuthToken }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogout = () => {\n    // Clear the authentication token and remove it from local storage\n    setAuthToken('');\n    localStorage.removeItem('authToken');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Send login request to the server\n      const response = await axios.post('http://localhost:3001/users/login', { email, password });\n\n      // Extract the token from the response\n      const { token } = response.data;\n\n      // Set the token as the authentication token\n      setAuthToken(token);\n\n      // Save the token to local storage\n      localStorage.setItem('authToken', token);\n    } catch (error) {\n      setError('Invalid email or password');\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"h-screen grid content-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-2\">\n          <div>\n            <label className=\"block\">Email:</label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"border p-2 rounded\"\n            />\n          </div>\n          <div>\n            <label className=\"block\">Password:</label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"border p-2 rounded\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n          >\n            Login\n          </button>\n          {error && <p>{error}</p>}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction AdminDashboard() {\n  return <div>Admin Dashboard</div>;\n}\n\nfunction GeneralUserDashboard() {\n  return <div className=\"h-screen\">General User Dashboard<button onClick={handleLogout}>Logout</button></div>\n}\n\nfunction LoginPage() {\n  const [authToken, setAuthToken] = useState('');\n\n  useEffect(() => {\n    // Check if the token exists in local storage\n    const storedToken = localStorage.getItem('authToken');\n\n    if (storedToken) {\n      setAuthToken(storedToken);\n    }\n  }, []);\n\n  let dashboardComponent;\n  if (authToken) {\n    const decodedToken = jwt_decode(authToken);\n    const userRole = decodedToken ? decodedToken.role : '';\n\n    if (userRole === 'admin') {\n      dashboardComponent = <AdminDashboard />;\n    } else if (userRole === 'general') {\n      dashboardComponent = <GeneralUserDashboard />;\n    }\n  }\n\n  return (\n    <div>\n      {!authToken ? (\n        <LoginForm setAuthToken={setAuthToken} />\n      ) : (\n        <>\n          {dashboardComponent}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}