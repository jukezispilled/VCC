{"ast":null,"code":"var _jsxFileName = \"/Users/jukezispilled/VCC/src/pages/LoginPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode'; // Import jwt_decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm(_ref) {\n  _s();\n  let {\n    setAuthToken\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send login request to the server\n      const response = await axios.post('/users/login', {\n        email,\n        password\n      });\n\n      // Extract the token from the response\n      const {\n        token\n      } = response.data;\n\n      // Set the token as the authentication token\n      setAuthToken(token);\n    } catch (error) {\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = LoginForm;\nfunction AdminDashboard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Admin Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c2 = AdminDashboard;\nfunction GeneralUserDashboard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"General User Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_c3 = GeneralUserDashboard;\nfunction App() {\n  _s2();\n  const [authToken, setAuthToken] = useState('');\n  let dashboardComponent;\n  if (authToken) {\n    const decodedToken = jwt_decode(authToken); // Use jwt_decode to decode the token\n    const userRole = decodedToken ? decodedToken.role : '';\n    if (userRole === 'admin') {\n      dashboardComponent = /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 28\n      }, this);\n    } else if (userRole === 'general') {\n      dashboardComponent = /*#__PURE__*/_jsxDEV(GeneralUserDashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 28\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !authToken ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      setAuthToken: setAuthToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : dashboardComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"tzagGjFcUd6PJPYm17Aom163nzk=\");\n_c4 = App;\nexport default LoginPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"AdminDashboard\");\n$RefreshReg$(_c3, \"GeneralUserDashboard\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","axios","jwt_decode","LoginForm","setAuthToken","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","post","token","data","target","value","AdminDashboard","GeneralUserDashboard","App","authToken","dashboardComponent","decodedToken","userRole","role","LoginPage"],"sources":["/Users/jukezispilled/VCC/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode'; // Import jwt_decode\n\nfunction LoginForm({ setAuthToken }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      // Send login request to the server\n      const response = await axios.post('/users/login', { email, password });\n\n      // Extract the token from the response\n      const { token } = response.data;\n\n      // Set the token as the authentication token\n      setAuthToken(token);\n    } catch (error) {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n        {error && <p>{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nfunction AdminDashboard() {\n  return <div>Admin Dashboard</div>;\n}\n\nfunction GeneralUserDashboard() {\n  return <div>General User Dashboard</div>;\n}\n\nfunction App() {\n  const [authToken, setAuthToken] = useState('');\n\n  let dashboardComponent;\n  if (authToken) {\n    const decodedToken = jwt_decode(authToken); // Use jwt_decode to decode the token\n    const userRole = decodedToken ? decodedToken.role : '';\n\n    if (userRole === 'admin') {\n      dashboardComponent = <AdminDashboard />;\n    } else if (userRole === 'general') {\n      dashboardComponent = <GeneralUserDashboard />;\n    }\n  }\n\n  return (\n    <div>\n      {!authToken ? (\n        <LoginForm setAuthToken={setAuthToken} />\n      ) : (\n        dashboardComponent\n      )}\n    </div>\n  );\n}\n\nexport default LoginPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}